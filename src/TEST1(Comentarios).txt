ADDI R1 R0 8
ADDI R2 R0 3
ADDI R6 R0 1
ADDI R9 R0 14
ADDI R11 R0 127
ADDI R13 R0 6

SW   R1  R6 2    // GUARDO (8)R1  EN LA POSICION 3  
SW   R6  R2 4    // GUARDO (1)R6  EN LA POSICION 7
SW   R9  R6 3    // GUARDO (14)R9 EN LA POSICION 4
SW   R11 R1 0    // GUARDO (127)R11 EN LA POSICION 8

ADDU R13 R6 R3	 // (6)R13  + (1)R6  = (7)R3
AND  R1  R9 R4   // (8)R1  & (14)R9 = (8)R4
OR   R9  R2 R5   // (14)R9 | (3)R2  = (15)R5
XOR  R1  R9 R6   // (8)R1 XOR (14)R9 = (6)R6	  
BEQ  R1  R3 -5   // SALTA CUANDO R3 SEA IGUAL A 8

SLL  R1  R3 6    // R1[8:0](0000_0110) << 6 = R3[8:0](1000_0000)
SUBU R4  R5 R1   // (8)R4 - (15)R5 = (-7)R1
LW   R8  R2 0	 // TRAIGO DEL LUGAR (3)R2 DE MEMORIA LO GUARDO EN R8
LB   R12 R0 1024 // TRAIGO DEL LUGAR 8 EL BYTE 1 POSICION EN BYTE (1024)R0+124 Y LO GUARDO EN R12 = ffffff83 
JUMP 28
SLL  R6 R9 1
SLL  R6 R9 1
SLL  R6 R9 1
SLL  R6 R9 1
SRA  R10 R9 1   // R3(1110) >> 1 = R10(1111)



ESTE PROGRAMA TESTEA LAS INSTRUCCIONES TIPO-R, STORE WORD, LOAD WORD, LOAD BYTE, BRACH EQUALS Y JUMP
